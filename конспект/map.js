// Метод map() создаёт новый массив с результатом вызова указанной функции для каждого элемента массива.

// Синтаксис
// const new_array = arr.map(function callback( currentValue[, index[, array]]) {
    // Возвращает элемент для new_array
// }[, thisArg])

// Примеры

// Пример: отображение массива чисел на массив квадратных корней
// Следующий код берёт массив чисел и создаёт новый массив, содержащий квадратные корни чисел из первого массива.

const num = [1, 4, 9];
const roots = num.map(Math.sqrt);
// теперь roots равен [1, 2, 3], а numbers всё ещё равен [1, 4, 9]

// Пример: отображение массива чисел с использованием функции, содержащей аргумент
// Следующий код показывает, как работает отображение, когда функция требует один аргумент. Аргумент будет автоматически присваиваться каждому элементу массива, когда map проходит по оригинальному массиву.

const numbers = [1, 4, 9];
const doubles = numbers.map((num) => num * 2);
// теперь doubles равен [2, 8, 18], а numbers всё ещё равен [1, 4, 9]

// Пример: использование map для переворачивания строки

const string = "12345";
const reversed = Array.prototype.map
  .call(string, (x) => x)
  .reverse()
  .join("");
// reversed равен '54321'
// Бонус: используйте '===' для проверки того, является ли строка палиндромом
